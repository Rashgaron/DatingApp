Observables provide support for passing messages between parts of your application.

The observer pattern is a software design pattern in which an object, called the subject, maintains a list of its dependents, 
called observers, and notifies them automatically of state changes.

Observables are declarative. You define a function for publishing values, but it is not 
executed until a consumer subscribes to it. The subscribed consumer then receives notifications untel the function completes,
or until they unsubscribe.

As a publisher, you create an Observable instance that defines a subscriber function. This is the function that is executed
when a consumer calls the subscribe() method. The subscriber function defines how to obtain or generate values or messages to be published.

